# Define os grupos de servidores para cada serviço (upstreams)
upstream catalog_backend {
    server catalog-service:5000; 
}
upstream upload_backend {
    server upload-service:5000;
}
upstream admin_backend {
    server admin-service:5000;
}
upstream streaming_backend {
    server streaming-service:5000;
}
upstream frontend_backend {
    server frontend:80;
}

# Servidor principal que lida com todo o tráfego da aplicação
server {
    listen 80;
    server_name _;
    resolver 127.0.0.11 valid=10s; # Necessário em ambientes Docker/Kubernetes
    
    client_max_body_size 120M;
    
    # Redireciona para o frontend (a nossa Single Page Application)
    location / {
        proxy_pass http://frontend_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Redireciona para a API do catálogo
    location /api/catalog/ {
        proxy_pass http://catalog_backend/;
    }

    # Redireciona para a API de upload
    location /api/upload {
        proxy_pass http://upload_backend/;
        proxy_request_buffering off; # Importante para uploads grandes
    }

    # Redireciona para a API de administração
    location /api/admin/ {
        proxy_pass http://admin_backend/;
    }

    # Redireciona para a API de streaming
    location /api/streaming/ {
        proxy_pass http://streaming_backend/;
        proxy_buffering off; # Importante para streaming
    }

    # Endpoint para health checks
    location /health {
        access_log off;
        return 200 "UALFlix NGINX Load Balancer - Healthy\n";
        add_header Content-Type text/plain;
    }
}