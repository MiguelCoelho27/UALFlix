# UALFlix Application Services - FINAL CORRECTED VERSION
# Dependencies: mongodb.yaml and redis.yaml must be deployed first

---
# Catalog Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-service
  labels:
    app: catalog-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: catalog-service
  template:
    metadata:
      labels:
        app: catalog-service
    spec:
      containers:
        - name: catalog
          image: iulian169/ualflix-catalog:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: MONGO_URI
              value: "mongodb://ualflix_admin:ualflix_password@mongodb-service:27017/ualflix?replicaSet=ualflix-rs&authSource=admin"
            - name: REDIS_HOST
              value: "redis-service"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: catalog-service
spec:
  selector:
    app: catalog-service
  ports:
    - port: 5000
      targetPort: 5000
  type: ClusterIP

---
# Upload Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upload-service
  labels:
    app: upload-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: upload-service
  template:
    metadata:
      labels:
        app: upload-service
    spec:
      volumes:
        - name: upload-storage
          persistentVolumeClaim:
            claimName: upload-pvc
      containers:
        - name: upload
          image: iulian169/ualflix-upload:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: MONGO_URI
              value: "mongodb://ualflix_admin:ualflix_password@mongodb-service:27017/ualflix?replicaSet=ualflix-rs&authSource=admin"
            - name: CATALOG_SERVICE_URL
              value: "http://catalog-service:5000/videos"
          volumeMounts:
            - name: upload-storage
              mountPath: /app/uploads_data
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: upload-service
spec:
  selector:
    app: upload-service
  ports:
    - port: 5000
      targetPort: 5000
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: upload-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# Streaming Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streaming-service
  labels:
    app: streaming-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: streaming-service
  template:
    metadata:
      labels:
        app: streaming-service
    spec:
      volumes:
        - name: upload-storage
          persistentVolumeClaim:
            claimName: upload-pvc
      containers:
        - name: streaming
          image: iulian169/ualflix-streaming:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: upload-storage
              mountPath: /app/uploads_data
              readOnly: true
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "250m"
---
apiVersion: v1
kind: Service
metadata:
  name: streaming-service
spec:
  selector:
    app: streaming-service
  ports:
    - port: 5000
      targetPort: 5000
  type: ClusterIP

---
# Admin Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-service
  labels:
    app: admin-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-service
  template:
    metadata:
      labels:
        app: admin-service
    spec:
      containers:
        - name: admin
          image: iulian169/ualflix-admin:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: CATALOG_SERVICE_URL
              value: "http://catalog-service:5000"
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "250m"
---
apiVersion: v1
kind: Service
metadata:
  name: admin-service
spec:
  selector:
    app: admin-service
  ports:
    - port: 5000
      targetPort: 5000
  type: ClusterIP

---
# Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: iulian169/ualflix-frontend:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP
---
# NGINX Load Balancer
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-service
  labels:
    app: nginx-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-service
  template:
    metadata:
      labels:
        app: nginx-service
    spec:
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config
      containers:
        - name: nginx
          image: iulian169/ualflix-nginx:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx-service
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    upstream catalog_backend {
        server catalog-service:5000;
    }
    upstream upload_backend {
        server upload-service:5000;
    }
    upstream admin_backend {
        server admin-service:5000;
    }
    upstream streaming_backend {
        server streaming-service:5000;
    }
    upstream frontend_backend {
        server frontend:80;
    }
    server {
        listen 80;
        server_name _;
        resolver 127.0.0.11 valid=10s;

        client_max_body_size 120M;

        location /api/catalog/ {
            proxy_pass http://catalog_backend/;
        }
        location /api/upload {
            proxy_pass http://upload_backend/;
            client_max_body_size 120M;
            proxy_request_buffering off;
        }
        location /api/admin/ {
            proxy_pass http://admin_backend/;
        }
        location /api/streaming/ {
            proxy_pass http://streaming_backend/;
            proxy_buffering off;
        }
        location / {
            proxy_pass http://frontend_backend/;
        }
    }
