# Redis Cache Configuration
# Dedicated YAML for Redis cache deployment

---
# PersistentVolumeClaim for Redis data persistence
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: default
  labels:
    app: redis
    tier: cache
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: "standard"
  resources:
    requests:
      storage: 2Gi

---
# ConfigMap for Redis configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: default
  labels:
    app: redis
data:
  redis.conf: |
    # Redis configuration for UALFlix cache

    # Memory and performance settings
    maxmemory 256mb
    maxmemory-policy allkeys-lru

    # Persistence settings
    appendonly yes
    appendfsync everysec
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

    # Network settings
    bind 0.0.0.0
    port 6379
    tcp-keepalive 300

    # Logging
    loglevel notice

    # Disable dangerous commands in production
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    rename-command DEBUG ""
    rename-command CONFIG ""

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: default
  labels:
    app: redis
    tier: cache
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: redis
      protocol: TCP
  selector:
    app: redis
  type: ClusterIP

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: default
  labels:
    app: redis
    tier: cache
spec:
  replicas: 1 # Single instance for simplicity (can be scaled to Redis Cluster)
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        tier: cache
    spec:
      # Security context
      securityContext:
        runAsUser: 999
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true

      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
              name: redis

          # Use custom Redis configuration
          command:
            - "redis-server"
            # - "/etc/redis/redis.conf"

          # Volume mounts for data and configuration
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis
              readOnly: true

          # Resource limits and requests
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"

          # Liveness probe - check if Redis is responding
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          # Readiness probe - check if Redis is ready to accept connections
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3

          # Environment variables
          env:
            - name: REDIS_PORT
              value: "6379"

      # Volumes definition
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
        - name: redis-config
          configMap:
            name: redis-config
            items:
              - key: redis.conf
                path: redis.conf

---
# Optional: Redis monitoring service (for debugging)
apiVersion: v1
kind: Service
metadata:
  name: redis-monitor
  namespace: default
  labels:
    app: redis
    component: monitor
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: redis
  selector:
    app: redis
  type: NodePort # Allows external access for monitoring tools
