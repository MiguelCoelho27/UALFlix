# MongoDB Replica Set Configuration
# Dedicated YAML for MongoDB cluster deployment

---
# Secret for MongoDB keyfile authentication between replica set members
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-keyfile
  namespace: default
type: Opaque
data:
  # Base64 encoded: "ualflix_replica_set_key_2025"
  keyfile: UnB4QUY1Q1hLd1ExdGprZzgwMm5jNk9sZHN3YVBEb0p5b3lJb3N3V0x6S0NvbGtVQXdKWFd4cXRtY09RblhLCg==

---
# Headless service for MongoDB StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: default
  labels:
    app: mongodb
    tier: database
spec:
  ports:
    - port: 27017
      targetPort: 27017
      name: mongodb
  clusterIP: None # Headless service for StatefulSet DNS
  selector:
    app: mongodb

---
# MongoDB StatefulSet with 3 replicas (1 Primary + 2 Secondary)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: "mongodb-service"
  replicas: 3
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      initContainers:
        # This container for the keyfile is still needed and works.
        - name: copy-and-chmod-keyfile
          image: busybox:1.36
          command:
            [
              "/bin/sh",
              "-c",
              "cp /etc/mongodb-keyfile-source/keyfile /etc/mongodb-keyfile-destination/keyfile && chmod 400 /etc/mongodb-keyfile-destination/keyfile",
            ]
          volumeMounts:
            - name: mongodb-keyfile-source
              mountPath: /etc/mongodb-keyfile-source
            - name: keyfile-storage
              mountPath: /etc/mongodb-keyfile-destination
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"

      containers:
        - name: mongodb
          image: mongo:7.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "ualflix_admin"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "ualflix_password"
            - name: MONGO_INITDB_DATABASE
              value: "ualflix"
          command:
            - "mongod"
          args:
            - "--replSet"
            - "ualflix-rs"
            #- "--auth"
            - "--keyFile"
            - "/etc/mongodb-keyfile/keyfile"
            - "--bind_ip_all"
            - "--wiredTigerCacheSizeGB"
            - "0.5"
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
            - name: keyfile-storage
              mountPath: /etc/mongodb-keyfile
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1000m"

      volumes:
        - name: mongodb-keyfile-source
          secret:
            secretName: mongodb-keyfile
        - name: keyfile-storage
          emptyDir: {}

  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "standard"
        resources:
          requests:
            storage: 5Gi

---
apiVersion: batch/v1
kind: Job
metadata:
  name: ualflix-mongo-init-final
spec:
  template:
    spec:
      containers:
        - name: mongo-init-job
          image: mongo:7.0
          command:
            - "sh"
            - "-c"
            - |
              set -e
              echo "Waiting for MongoDB pods to be ready..."
              sleep 15
              echo "Initiating replica set..."
              mongosh --host mongodb-0.mongodb-service:27017 --eval 'rs.initiate({ _id: "ualflix-rs", members: [ { _id: 0, host: "mongodb-0.mongodb-service:27017" }, { _id: 1, host: "mongodb-1.mongodb-service:27017" }, { _id: 2, host: "mongodb-2.mongodb-service:27017" } ] })'
              echo "Waiting for primary to be elected..."
              sleep 20
              echo "Creating admin user..."
              mongosh --host mongodb-0.mongodb-service:27017 --eval 'db.getSiblingDB("admin").createUser({ user: "ualflix_admin", pwd: "ualflix_password", roles: [{ role: "root", db: "admin" }] })'
              echo "SUCCESS: MongoDB is fully initialized."
      restartPolicy: Never
  backoffLimit: 4
